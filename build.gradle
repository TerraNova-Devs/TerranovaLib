import io.papermc.paperweight.userdev.ReobfArtifactConfiguration

plugins {
    id "io.papermc.paperweight.userdev" version "1.7.2"
    id("xyz.jpenilla.run-paper") version "2.3.0"
    id 'maven-publish'
    id 'java'
    id "io.github.goooler.shadow" version "8.1.8"
}

group = 'de.mcterranova.terranovaLib'
version = '0.8.5'
description = 'Lib for TerraNova Server.'

java {
    // Configure the Java toolchain to use Java 21
    toolchain.languageVersion = JavaLanguageVersion.of(21)

    // Set source and target compatibility
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "Oraxen"
        url = "https://repo.oraxen.com/releases"
    }
    maven {
        name = "Paperweight"
        url "https://plugins.gradle.org/m2/"
    }
}

paperweight {
    reobfArtifactConfiguration = ReobfArtifactConfiguration.getMOJANG_PRODUCTION()
    // Spigot Mappings
    // reobfArtifactConfiguration = ReobfArtifactConfiguration.getREOBF_PRODUCTION()
}

dependencies {
    paperweight.paperDevBundle("1.21-R0.1-SNAPSHOT")
    compileOnly("io.th0rgal:oraxen:1.184.0")
    implementation("com.influxdb:influxdb-client-java:6.5.0")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (JavaVersion.current().isJava10Compatible()) {
        options.release.set(21)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// Task to generate sources JAR
tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set("sources")
    description = "Generates a JAR containing the source code."
    group = "Build"
}

// Task to generate Javadoc JAR (optional)
tasks.register('javadocJar', Jar) {
    from javadoc
    archiveClassifier.set("javadoc")
    description = "Generates a JAR containing the Javadoc."
    group = "Documentation"
}

tasks.named('javadocJar') {
    dependsOn 'javadoc'
}

// Configure the Javadoc task to be more lenient
tasks.withType(Javadoc).configureEach {
    // Set the encoding for JavaDoc
    options.encoding = 'UTF-8'

    // Link to the Java 21 API documentation
    options.links("https://docs.oracle.com/en/java/javase/21/docs/api/")

    // Disable all Doclint checks to suppress warnings
    options.addBooleanOption('Xdoclint:none', true)

    // Prevent JavaDoc warnings from failing the build
    failOnError = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'de.mcterranova'
            artifactId = 'terranova-lib'
            version = version

            // Include the sources JAR
            artifact sourcesJar

            // Include the javadoc JAR (optional)
            artifact javadocJar
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/TerraNova-Devs/TerranovaLib")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

shadowJar {
    relocate 'com.influxdb', 'de.mcterranova.terranovaLib.shaded.influx'
    destinationDirectory.set(file("./build/libs"))
    archiveClassifier.set('all')
}

tasks.build {
    dependsOn tasks.shadowJar
}

// Ensure that publishing depends on sourcesJar and javadocJar
tasks.withType(PublishToMavenRepository).configureEach {
    dependsOn tasks.named("sourcesJar")
    dependsOn tasks.named("javadocJar")
}